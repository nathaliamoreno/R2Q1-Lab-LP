#include <iostream>
#include "Pedido.h"
#include "MesaDeRestaurante.h"
#include "RestauranteCaseiro.h"

using namespace std;

int main()
{
    int nq; //nq = nova quantidade
    Pedido p[100] = Pedido();
    p[0] = Pedido(1, "Descricao1", 1, 4.5); //numero, decricao, quantidade, valor
    p[1] = Pedido(2, "Descricao2", 3, 6.5);


    MesaDeRestaurante M;
    M.adicionaAoPedido(p[0]);
    M.adicionaAoPedido(p[1]);
    RestauranteCaseiro pM; //pM = pedido mesa

    //TESTANDO VALORES INICIAIS

    cout <<  "\n       P E D I D O S" << endl;
    cout <<  "_________________________\n" << endl;
    cout << "Numero do pedido: " << p[0].getNumero() << "\nDescricao: " << p[0].getDescricao() << "\nQuantidade: " << p[0].getQuantidade() << "\nPreco: R$  " << p[0].getPreco() <<endl;
    cout <<  "_________________________\n" << endl;
    cout << "Numero do pedido: " << p[1].getNumero() << "\nDescricao: " << p[1].getDescricao() << "\nQuantidade: " << p[1].getQuantidade() << "\nPreco: R$  " << p[1].getPreco() <<endl;
    cout <<  "_________________________\n" << endl;

    //IMPRIMINDO VALORES
    cout << "Total do pedido: R$ " << M.calculaTotal()<<endl;
    cout << "Total Geral: R$ " << pM.calculaTotalRestaurante(M.calculaTotal()) << endl;


     // O pM.adcionaAoPedido recebe o identificador do numero do pedido e a quantidade que deseja modificar
    cout << "\nTestando quantidade modificada: " << pM.adicionaAoPedido(p[1], 5)<< endl; //testando
    nq = pM.adicionaAoPedido(p[1], 5);
    p[1].setQuantidade(nq);

    /* o p[1].setQuantidade tá setando o valor corrigido, testei o get e set dele,
     * porem, no CalculaTotal tá imprimindo com o valor antigo.
     * Acha o erro!!!*/

    cout << "Total do pedido: R$ " << M.calculaTotal()<<endl;
    cout << "Valor total atualizado: R$ "<< pM.calculaTotalRestaurante(M.calculaTotal()) << endl;

    M.zeraPedidos(); //AQUI TA OK \0/
    cout << "\nTestando zeraPedidos: R$ " << M.calculaTotal()<<endl;


    return 0;
}
